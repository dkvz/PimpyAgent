/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFrameInit.java
 *
 * Created on 11-oct.-2009, 18:28:23
 */

package UI;

import java.awt.Cursor;
import java.net.URL;
import pimpy.*;
import javax.swing.*;

/**
 *
 * @author Alain
 */
public class JFrameInit extends javax.swing.JFrame {

    PimpyController controller;

    /** Creates new form JFrameInit */
    public JFrameInit(PimpyController controller) {
        this.controller = controller;
        initComponents();
        URL url = JFrameInit.class.getResource("hole_small.jpg");
        ImageIcon image = new ImageIcon(url);
        this.jLabelImage.setIcon(image);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        this.initialize();
    }

    public void notifyFailure(Exception ex) {
        JOptionPane.showMessageDialog(this, "Initialization failed for some reasons.\nMake sure you have a readable and well formed knowledge.db file in program directory.\n" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
        controller.close();
    }

    public void initialize() {
        // initializing talker in a thread.
        InitThread init = new InitThread(controller, this);
        init.start();
        while (init.isAlive()) {
            if (controller.getMainTalker() != null) {
                this.jProgressBarInit.setValue((int)Math.round(controller.getMainTalker().getInitProgress() * 100));
            }
            Thread.yield();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelStatus = new javax.swing.JLabel();
        jProgressBarInit = new javax.swing.JProgressBar();
        jLabelImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Initializing...");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabelStatus.setFont(jLabelStatus.getFont().deriveFont(jLabelStatus.getFont().getSize()+8f));
        jLabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelStatus.setText("Initializing...");
        getContentPane().add(jLabelStatus, java.awt.BorderLayout.NORTH);

        jProgressBarInit.setStringPainted(true);
        getContentPane().add(jProgressBarInit, java.awt.BorderLayout.SOUTH);

        jLabelImage.setPreferredSize(new java.awt.Dimension(350, 265));
        getContentPane().add(jLabelImage, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (controller.isTalkerInitialized()) {
            JFrameConversation convers = new JFrameConversation(controller);
            convers.setAgentName(controller.getTalkerName());
            convers.setLocationRelativeTo(null);
            convers.setVisible(true);
            this.dispose();
        } else {
            notifyFailure(new Exception("Talker said it could not be properly initialized."));
        }
    }//GEN-LAST:event_formWindowOpened

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JProgressBar jProgressBarInit;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jProgressBarInit
     */
    public javax.swing.JProgressBar getjProgressBarInit() {
        return jProgressBarInit;
    }

}
